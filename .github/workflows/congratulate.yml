name: Congratulate Contributors

on:
  # it's usually not recommended to use pull_request_target
  # but we consider it's safe here if we keep the same steps
  # see: https://securitylab.github.com/research/github-actions-preventing-pwn-requests/
  # and: https://github.com/facebook/react-native/pull/34370/files
  pull_request_target:
    types: [closed]
permissions:
  pull-requests: write
jobs:
  congratulate:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Fetch contributor data and comment
        uses: actions/github-script@v7
        with:
          script: |
            const pullRequest = context.payload.pull_request;
            const userName = pullRequest.user.login;

            function ordinalSuffix(number) {
              const j = number % 10,
                    k = number % 100;
              if (j == 1 && k != 11) {
                return number + "st";
              }
              if (j == 2 && k != 12) {
                return number + "nd";
              }
              if (j == 3 && k != 13) {
                return number + "rd";
              }
              return number + "th";
              }

            async function fetchContributorStats(username) {
              const apiUrl = `https://twenty.ngrok.app/api/contributors/contributorStats/${username}`;
             
              try {
                const response = await fetch(apiUrl);
                const data = await response.json();
                
                return data;
              } catch (error) {
                console.error('Error fetching contributor stats:', error);
                throw error;
              }
            }

            async function run() {
              try {
               

                const { data: pullRequests } = await github.rest.search.issuesAndPullRequests({
                  q: `is:pr author:lalo is:closed repo:ady-beraud/test-bot`,
                  per_page: 2,
                  page: 1,
                    });

                console.log(pullRequests.total_count);
                let stats;
                const isFirstPR = pullRequests.total_count === 1;
                console.log(isFirstPR);
                console.log(userName);

                if (!isFirstPR) {
                  stats = await fetchContributorStats(userName);
                } else {
                  stats = { mergedPRsCount: 0, rank: 52 };
                }

                const contributorUrl = `https://twenty.com/contributors/${userName}`;

                const message = `Thanks @${userName} for your contribution!\n` +

                            `This marks your **${ordinalSuffix(stats.mergedPRsCount + 1)}** PR on the repo. ` +
                            `You're **top ${stats.rank}%** of all our contributors ðŸŽ‰\n` +
                            `[See contributor page](${contributorUrl}) - ` +
                            `[Share on LinkedIn](https://www.linkedin.com/sharing/share-offsite/?url=${contributorUrl}) - ` +
                            `[Share on Twitter](https://www.twitter.com/share?url=${contributorUrl})`
                
                await github.rest.issues.createComment({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  issue_number: context.issue.number,
                  body: message
                });
              } catch (error) {
                console.error('Failed to handle PR merge:', error);
              }
            }

            run();
